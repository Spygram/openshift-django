apiVersion: v1
kind: BuildConfig
parameters:
- displayName: Project Name
  value: openshift-django
  name: PROJECT_NAME
- displayName: Stage Server
  value: stage
  name: STAGE_SERVER
- displayName: Test Server
  value: new-cicd
  name: TEST_SERVER
- displayName: Source Repo
  value: https://github.com/ruddra/openshift-django.git#develop
  name: GIT_REP
metadata:
  name: djangopipeline
  labels:
    name: djangopipeline
  annotations:
    pipeline.alpha.openshift.io/uses: '[{"name": "openshift-django", "namespace": "", "kind": "DeploymentConfig"}]'
spec:
  triggers:
    -
      type: GitHub
      github:
        secret: secret101
    -
      type: Generic
      generic:
        secret: secret101
  runPolicy: Serial
  source:
    type: None
  strategy:
    type: JenkinsPipeline
    jenkinsPipelineStrategy:
      jenkinsfile: |-
          node('') {
            stage('build in test'){
                openshiftBuild(namespace: "new-cicd", buildConfig: "openshift-django", showBuildLogs: 'true')
              }
            stage('deploy in test'){
                openshiftDeploy(namespace: 'new-cicd', deploymentConfig: "openshift-django")
                openshiftScale(namespace: 'new-cicd', deploymentConfig: "openshift-django", replicaCount: '2')
              }
            stage('deploy in stage'){
              openshiftTag(namespace: 'new-cicd', sourceStream: 'openshift-django',  sourceTag: 'latest', destinationStream: 'openshift-django', destinationTag: 'promoteToQA')
              openshiftDeploy(namespace: 'stage', deploymentConfig: 'openshift-django', )
              openshiftScale(namespace: 'stage', deploymentConfig: 'openshift-django',replicaCount: '3')
            }
          }
  output:
  resources:
  postCommit:
