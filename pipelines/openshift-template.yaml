apiVersion: v1
kind: BuildConfig
parameters:
- displayName: Project Name
  value: openshift-django
  name: PROJECT_NAME
- displayName: Stage Server
  value: stage
  name: STAGE_SERVER
- displayName: Test Server
  value: new-cicd
  name: TEST_SERVER
- displayName: Source Repo
  value: https://github.com/ruddra/openshift-django.git#develop
  name: GIT_REP
metadata:
  name: myfirstpipeline
  labels:
    name: myfirstpipeline
  annotations:
    pipeline.alpha.openshift.io/uses: '[{"name": "${PROJECT_NAME}", "namespace": "", "kind": "DeploymentConfig"}]'
spec:
  triggers:
    -
      type: GitHub
      github:
        secret: secret101
    -
      type: Generic
      generic:
        secret: secret101
  runPolicy: Serial
  source:
    type: None
  strategy:
    type: JenkinsPipeline
    jenkinsPipelineStrategy:
      jenkinsfile: |-
            stage 'build in ${TEST_SERVER}'
            openshiftBuild(namespace: '${TEST_SERVER}', buildConfig: '${PROJECT_NAME}', showBuildLogs: 'true')
            stage 'deploy in ${TEST_SERVER}'
            openshiftDeploy(namespace: '${TEST_SERVER}', deploymentConfig: '${PROJECT_NAME}')
            openshiftScale(namespace: '${TEST_SERVER}', deploymentConfig: '${PROJECT_NAME}',replicaCount: '2')
            stage 'deploy in ${STAGE_SERVER}'
            openshiftTag(namespace: '${TEST_SERVER}', sourceStream: '${PROJECT_NAME}',  sourceTag: 'latest', destinationStream: '${PROJECT_NAME}', destinationTag: 'promoteToQA')
            openshiftDeploy(namespace: '${STAGE_SERVER}', deploymentConfig: '${PROJECT_NAME}', )
            openshiftScale(namespace: '${STAGE_SERVER}', deploymentConfig: '${PROJECT_NAME}',replicaCount: '3')
  output:
  resources:
  postCommit:
